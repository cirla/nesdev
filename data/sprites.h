#ifndef SPRITES_H_
#define SPRITES_H_

#include <stdint.h>


typedef struct player {
    uint8_t x;
    uint8_t y;
} player_t;


// map ASCII character to sprite index
const uint8_t CHR_TO_IDX[91] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
31, 30, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 27, 0, 26, 0,
158, 159, 160, 161, 162, 163, 164, 164, 166, 167, 0, 0, 0, 0, 0, 29,
0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
};

// ring sprite
const uint8_t RING_SPRITES[2][2] = {
  {0x95, 0x96},
  {0x97, 0x98}
};

// groom sprites
const uint8_t GROOM_FRONT[4][4] = {
  {0x6D, 0x6E, 0x6F, 0x1F},
  {0x77, 0x78, 0x79, 0x1F},
  {0x81, 0x82, 0x83, 0x84},
  {0x8D, 0x8E, 0x8F, 0x90},
};

const uint8_t GROOM_BACK[4][4] = {
  {0x69, 0x6A, 0x6B, 0x6C},
  {0x73, 0x74, 0x75, 0x76},
  {0x7D, 0x7E, 0x7F, 0x80},
  {0x89, 0x8A, 0x8B, 0x8C},
};

const uint8_t GROOM_LEFT[4][4] = {
  {0x54, 0x55, 0x56, 0x57},
  {0x58, 0x59, 0x5A, 0x5B},
  {0x5C, 0x5D, 0x5E, 0x1F},
  {0x1F, 0x5F, 0x60, 0x1F},
};

const uint8_t GROOM_RIGHT[4][4] = {
  {0x54, 0x55, 0x56, 0x57},
  {0x61, 0x62, 0x63, 0x43},
  {0x64, 0x65, 0x66, 0x1F},
  {0x1F, 0x67, 0x68, 0x1F},
};

#endif // SPRITES_H_

