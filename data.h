/**
 * data.h
 *
 * http://timcheeseman.com/nesdev/
 */

#ifndef DATA_H_
#define DATA_H_

#include <stdint.h>

#include "nes.h"
#include "backgrounds/game.h"

// game states
#define STATE_TITLE 0
#define STATE_GAME  1
#define STATE_PAUSE 2

// palettes
uint8_t const PALETTES[] = {
    COLOR_BLACK,                           // background color

    COLOR_BLUE, COLOR_WHITE, COLOR_RED,    // background palette 0
    0,                                     // ignored
    0, 0, 0,                               // background palette 1
    0,                                     // ignored
    0, 0, 0,                               // background palette 2
    0,                                     // ignored
    0, 0, 0,                               // background palette 3

    COLOR_BLACK,                           // background color (mirror)

    COLOR_DGRAY, COLOR_WHITE, COLOR_LGRAY, // sprite palette 0
    0,                                     // ignored
    COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, // sprite palette 1
    0,                                     // ignored
    0, 0, 0,                               // sprite palette 2
    0,                                     // ignored
    0, 0, 0,                               // sprite palette 3
};

// tile indices
#define SPRITE_PLAYER 0x10

// Run-length encoded backgrounds created with NES Screen Tool
// https://shiru.untergrund.net/files/nesst.zip

uint8_t const GameBackground[] = {
    0x05, 0x00, 0x05, 0x1f, 0x01, 0x04, 0x05, 0x1d, 0x02, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00,
    0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05,
    0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d,
    0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13,
    0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03,
    0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00,
    0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05,
    0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d,
    0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x03, 0x00, 0x05, 0x1d, 0x13, 0x11, 0x14, 0x05, 0x1d, 0x12,
    0x00, 0x05, 0x1f, 0x05, 0x00
};

#endif // DATA_H_

